3+4
a <- 3
b <- 4
a+
b
b-a
b <- b-a
a*b
b <- (a+b)*b
a*b
#导入数据，命名。因子化spambase，因为是类别预测而不是数值预测。
spambase <- read.csv("spambase.data", header=F)
colnames(spambase) <- read.table("spambase.names", skip=33, sep=":", comment.char="")[,1]
colnames(spambase)[ncol(spambase)] <- "spam"
spambase$spam <- as.factor(spambase$spam)
set.seed(1234)
samp <- sample(4601,2500)
spambase.train <- spambase[samp,]
spambase.test <- spambase[-samp,]
#导入数据，命名。因子化spambase，因为是类别预测而不是数值预测。
spambase <- read.csv("spambase.data", header=F)
setwd("~/RWorkSpace/learningSpace/SVM")
#导入数据，命名。因子化spambase，因为是类别预测而不是数值预测。
spambase <- read.csv("spambase.data", header=F)
colnames(spambase) <- read.table("spambase.names", skip=33, sep=":", comment.char="")[,1]
colnames(spambase)[ncol(spambase)] <- "spam"
spambase$spam <- as.factor(spambase$spam)
set.seed(1234)
samp <- sample(4601,2500)
spambase.train <- spambase[samp,]
spambase.test <- spambase[-samp,]
library(kernlab)
spambase.svml <- ksvm(spam~., data=spambase.train)
spambase.svml
library(dplyr)
#使用kernlab包执行基本分析
spambase.svml <- ksvm(spam~., data=spambase.train, C=10, cross=10)
spambase.svml
rm
rm(list=list())
rm(list)
rm(list())
list <- rm(list())
list <- rm(list
)
rm(list=ls())
ls()
setwd("~/RWorkSpace/learningSpace/MBR")
ws.customer <- read.csv("Wholesale customers data.csv")
ws.customer$Channel <- factor(ws.customer$Channel, labels=c("Horeca", "Retail"))
ws.customer$Region <- factor(ws.customer$Region)
ws.customer$Region <- factor(ws.customer$Region, labels=c("Lisbon", "Oporto", "Other Region"))
summary(ws.customer)
plot(ws.customer[,3:8],col=(ws.customer$Region))
# rough plot to see distinguish at begining
plot(ws.customer[,3:8],col=(ws.customer$Region), pch=as.numeric(ws.customer$Region))
# sample 220
sampA <- sample(1:440, 220)
table(ws.customer[sampA,2])
table(ws.customer[sampA,1])
samp <- (1:440)[-sampA]
sampB <- (1:440)[-sampA]
rm(samp)
table(ws.customer[sampB,2])
library(class)
#using knn
wsc.knn <- knn(ws.customer[sampA,3:8], ws.customer[sampB, 3:8], ws.customer[sampA, 2], k=3)
table(wsc.knn)
table(wsc.knn, ws.customer[sampB, 2])
#using knn
wsc.knn <- knn(ws.customer[sampA,3:8], ws.customer[sampB, 3:8], ws.customer[sampA, 2], k=15)
table(wsc.knn, ws.customer[sampB, 2])
#using knn
wsc.knn <- knn(ws.customer[sampA,3:8], ws.customer[sampB, 3:8], ws.customer[sampA, 2], k=5)
table(wsc.knn, ws.customer[sampB, 2])
# find optimized k value
mcrate <- numeric(20)
for (i in 3:20){
wsc.knn <- knn(ws.customer[sampA,3:8], ws.customer[sampB, 3:8], ws.customer[sampA, 2], k=i)
cr <- table(wsc.knn, ws.customer[sampB,2])
mcrate[i] <- (sum(cr)-sum(diag(cr)))/sum(cr)
}
mcrate
plot(3:20, mcrate[3:20], type="1")
plot(3:20, mcrate[3:20], type="l")
rm(list=ls())
setwd("~/RWorkSpace/learningSpace/Cluster")
download.file("http://goo.gl/gNqyqn","消费支出H21.csv")
download.file("http://goo.gl/gNqyqn","消费支出H21.csv")
cons <- read.csv("消费支出H21.csv", row.names=1)
cons <- read.csv("消费支出H21.csv", row.names=l)
cons <- read.csv("消费支出H21.csv", row.names=0)
attitude
setwd("~/RWorkSpace/learningSpace/Principal Component Analysis PCA")
setwd("~/RWorkSpace/learningSpace/R_Weibo")
api_url <- "https://api.weibo.com/2/statuses/home_timeline.json"
access_token <- "2.00ZkhgbHZZkUbD2d63647721ExpuiB"
data <- readLines(paste(api_url, "?accesstoken=", access_token, "&count=100", sep=""))
data <- readLines(paste(api_url, "?access_token=", access_token, "&count=100", sep=""))
install.packages("rjson")
install.packages("rjson")
library(rjson)
wobject <- fromJSON(data)
length(wobject$statuses)
weibo <- list()
for(i in 1:length(wobject$statuses)){
weibo$text[i] <- wobject$statuses[[i]]$text
weibo$created[i] <- wobject$statuses[[i]]$created_at
}
library(dplyr)
library(ggplot2)
