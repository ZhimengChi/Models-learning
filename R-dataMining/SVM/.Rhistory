3+4
a <- 3
b <- 4
a+
b
b-a
b <- b-a
a*b
b <- (a+b)*b
a*b
str(Titanic)
library("epitools")
library(epitools)
data(Titanic)
Titanic.df <- expand.table(Titanic)
Titanic.tree <- rpart(Survived~., data=Titanic.df, method="class")
library(rpart)
Titanic.tree <- rpart(Survived~., data=Titanic.df, method="class")
library(partykit)
install.packages("partykit")
library(partykit)
plot(as.party(Titanic.tree))
plotcp(Titanic.tree)
Titanic.tree2 <- rpart(Survived ~ ., data=Titanic.df,method="class",cp=0.083)
plot(as.party(Titanic.tree2))
data(diamonds)
library(ggplot2)
data(diamonds)
str(diamonds)
diamonds2 <- subset(diamonds, subset = carat>=1.5 & carat<2 & clarity %in% c("I1", "SI2"))
boxplot(diamonds2$price)
# 因为是数值变量，method为anova
diamonds.tree <- rpart(formula=price ~ carat+cut+clarity+color, data=diamonds, method="anova")
plot(as.party(diamonds.tree))
plotcp(diamonds.tree)
# 训练
train <- diamonds[1:50000,]
test <- diamonds[50001:nrows(diamonds),]
diamonds.trees <- rpart(formula=price ~ carat+cut+clarity+color, data=train, method="anova", cp=0.078)
plot(as.party(diamonds.trees))
diamonds.tree2 <- rpart(formula=price ~ carat+cut+clarity+color, data=train, method="anova", cp=0.078)
p <- predict(diamonds.tree2, newdata=test)
test <- diamonds[50001:nrows(diamonds),]
test <- diamonds[50001:nrow(diamonds),]
p <- predict(diamonds.tree2, newdata=test)
p
heap(p)
head(p)
rm(list=ls())
setwd("~/RWorkSpace/learningSpace/SVM")
spambase <- read.csv("spambase.data", header=F)
colnames(spambase) <- read.table("spambase.names", skip=33, sep=":", comment.char="")[,1]
colnames(spambase)[ncol(spambase)] <- "spam"
spambase$spam <- as.factor(spambase$spam)
dim(spambase)
set.seed(1234)
samp <- sample(4601,2500)
spambase.train <- spambase[samp,]
spambase.test <- spambase[-samp,]
install.packages("kernlab")
library(kernlab)
